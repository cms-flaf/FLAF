{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"FLAF","text":"<p>FLAF - Flexible LAW-based Analysis Framework. Task workflow managed is done via LAW (Luigi Analysis Framework).</p>"},{"location":"#how-to-install","title":"How to install","text":"<ol> <li> <p>Setup ssh keys:</p> <ul> <li>On GitHub settings/keys</li> <li>On CERN GitLab profile/keys</li> </ul> </li> <li> <p>Clone the repository:   <pre><code>git clone --recursive git@github.com:cms-flaf/Framework.git FLAF\n</code></pre></p> </li> <li> <p>Create a user customisation file <code>config/user_custom.yaml</code>. It should contain all user-specific modifications that you don't want to be committed to the central repository. Below is example of minimal content of the file (replace <code>USER_NAME</code> and <code>ANA_FOLDER</code> with your values):     <pre><code>fs_default:\n    - 'T3_CH_CERNBOX:/store/user/USER_NAME/ANA_FOLDER/'\nfs_anaCache:\n    - 'T3_CH_CERNBOX:/store/user/USER_NAME/ANA_FOLDER/'\nfs_anaTuple:\n    - 'T3_CH_CERNBOX:/store/user/USER_NAME/ANA_FOLDER/'\nanalysis_config_area: config/HH_bbtautau\ncompute_unc_variations: true\nstore_noncentral: true\n</code></pre></p> </li> </ol>"},{"location":"#how-to-load-environment","title":"How to load environment","text":"<ol> <li> <p>Following command activates the framework environment:     <pre><code>source env.sh\n</code></pre></p> </li> <li> <p>For the new installation or after you implement new law tasks, you need to update the law index:     <pre><code>law index --verbose\n</code></pre></p> </li> <li> <p>Initialize voms proxy:     <pre><code>voms-proxy-init -voms cms -rfc -valid 192:00\n</code></pre></p> </li> </ol>"},{"location":"analysis/","title":"Common analysis steps","text":"<p>Remarks:</p> <ul> <li> <p>commands bellow assume that <code>ERA</code> variable is set. E.g.     <pre><code>ERA=Run2_2016\n</code></pre>     Alternatively you can add <code>ERA=Run2_2016; ...</code> in front of each command.</p> </li> <li> <p><code>version</code> argument alows to produce different versions of the same task. In the command below <code>--version dev</code> is used for illustration purposes. You can replace it with your version naming.</p> </li> <li><code>--workflow</code> can be <code>htcondor</code> or <code>local</code>. It is recommended to develop and test locally and then switch to <code>htcondor</code> for production. In examples below <code>--workflow local</code> is used for illustration purposes.</li> <li>when running on <code>htcondor</code> it is recommended to add <code>--transfer-logs</code> to the command to transfer logs to local.</li> <li><code>--customisations</code> argument is used to pass custom parameters to the task in form param1=value1,param2=value2,...</li> <li>if you want to run only on few files, you can specify list of branches to run using <code>--branches</code> argument. E.g. <code>--branches 2,7-10,17</code>.</li> <li>to get status, use <code>--print-stauts N,K</code> where N is depth for task dependencies, K is depths for file dependencies. E.g. <code>--print-status 3,1</code>.</li> <li>to remove task output use <code>--remove-output N,a</code>, where N is depth for task dependencies. E.g. <code>--remove-output 0,a</code>.</li> </ul>"},{"location":"analysis/#create-input-file-list","title":"Create input file list","text":"<pre><code>law run InputFileTask  --period ${ERA} --version dev\n</code></pre>"},{"location":"analysis/#create-anacache","title":"Create anaCache","text":"<pre><code>law run AnaCacheTask  --period ${ERA} --workflow local --version dev\n</code></pre>"},{"location":"analysis/#create-anatuple","title":"Create anaTuple","text":"<pre><code>law run AnaTupleTask --period ${ERA} --workflow local --version dev\n</code></pre>"},{"location":"hh_bbtautau/","title":"Simple commands","text":""},{"location":"hh_bbtautau/#deeptau-2p1","title":"DeepTau 2p1","text":""},{"location":"hh_bbtautau/#anacache-production","title":"AnaCache Production","text":"<pre><code>era=Run2_2016; dir=v8_deepTau2p1_onlyTauTau_HTT; law run InputFileTask  --period ${era} --version ${dir}\nera=Run2_2016; dir=v8_deepTau2p1_onlyTauTau_HTT; law run AnaCacheTask  --period ${era} --workflow htcondor --version ${dir} --transfer-logs\n</code></pre>"},{"location":"hh_bbtautau/#anatuple-production-after-anacachetask","title":"AnaTuple Production (AFTER AnaCacheTask)","text":"<pre><code>era=Run2_2016; dir=v8_deepTau2p1_onlyTauTau_HTT; law run InputFileTask  --period ${era} --version ${dir}\nera=Run2_2016; dir=v8_deepTau2p1_onlyTauTau_HTT; law run AnaTupleTask --period ${era} --version ${dir} --workflow htcondor --transfer-logs\nera=Run2_2016; dir=v8_deepTau2p1_onlyTauTau_HTT; mkdir /eos/user/v/vdamante/HH_bbtautau_resonant_Run2/${dir}/Run2_${era}/data\nera=Run2_2016; dir=v8_deepTau2p1_onlyTauTau_HTT; law run DataMergeTask --period ${era} --version ${dir} --workflow htcondor --transfer-logs\n</code></pre>"},{"location":"hh_bbtautau/#anacachetuple-production-after-anatupletask","title":"AnaCacheTuple Production (AFTER AnaTupleTask)","text":"<pre><code>era=Run2_2016; dir=v8_deepTau2p1_onlyTauTau_HTT; law run AnaCacheTupleTask --period Run2_${era} --version ${dir} --workflow htcondor --transfer-logs\n</code></pre>"},{"location":"hh_bbtautau/#histograms-production-after-anatupletask-but-not-necessairly-anacachetupletask","title":"Histograms Production (AFTER AnaTupleTask but NOT NECESSAIRLY AnaCacheTupleTask)","text":"<pre><code>era=Run2_2016; dir=v8_deepTau2p1_onlyTauTau_HTT; law run HistProducerFileTask --period Run2_${era} --version ${dir} --workflow htcondor --transfer-logs\nera=Run2_2016; dir=v8_deepTau2p1_onlyTauTau_HTT; law run HistProducerSampleTask --period Run2_${era} --version ${dir} --workflow htcondor --transfer-logs\nera=Run2_2016; dir=v8_deepTau2p1_onlyTauTau_HTT; law run  MergeTask --period Run2_${era}  --version ${dir}  --workflow htcondor --transfer-logs\n</code></pre> <p>Work in progress <pre><code>era=Run2_2016; dir=v8_deepTau2p1_onlyTauTau_HTT; law run  HistRebinnerTask --period Run2_${era}  --version ${dir}  --workflow htcondor --transfer-logs #This does something only for KinFit_m, currently\nera=Run2_2016; dir=v8_deepTau2p1_onlyTauTau_HTT; law run  HaddMergedTask --period Run2_${era}  --version ${dir}  --workflow htcondor --transfer-logs\n</code></pre></p>"},{"location":"hh_bbtautau/#deeptau-2p5","title":"DeepTau 2p5","text":""},{"location":"hh_bbtautau/#anacache-production_1","title":"AnaCache Production","text":"<pre><code>era=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; law run InputFileTask  --period Run2_${era} --version ${dir}\nera=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; law run AnaCacheTask  --period Run2_${era} --workflow htcondor --version ${dir} --transfer-logs --customisations deepTauVersion=2p5\n</code></pre>"},{"location":"hh_bbtautau/#anatuple-production-after-anacachetask_1","title":"AnaTuple Production (AFTER AnaCacheTask)","text":"<pre><code>era=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; law run InputFileTask  --period Run2_${era} --version ${dir}\nera=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; law run AnaTupleTask --period Run2_${era} --version ${dir} --workflow htcondor --transfer-logs --customisations deepTauVersion=2p5\nera=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; mkdir /eos/user/v/vdamante/HH_bbtautau_resonant_Run2/${dir}/Run2_${era}/data\nera=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; law run DataMergeTask --period Run2_${era} --version ${dir} --workflow htcondor --transfer-logs --customisations deepTauVersion=2p5 # not sure it's needed in this step but I add it usually\n</code></pre>"},{"location":"hh_bbtautau/#anacachetuple-production-after-anatupletask_1","title":"AnaCacheTuple Production (AFTER AnaTupleTask)","text":"<pre><code>era=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; law run AnaCacheTupleTask --period Run2_${era} --version ${dir} --workflow htcondor --transfer-logs --customisations deepTauVersion=2p5\nera=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; mkdir -p /eos/home-k/kandroso/cms-hh-bbtautau/anaCache/Run2_${era}/data/${dir}\nera=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; law run DataCacheMergeTask --period Run2_${era} --version ${dir} --workflow htcondor --transfer-logs --customisations deepTauVersion=2p5\n</code></pre>"},{"location":"hh_bbtautau/#histograms-production-after-anatupletask-but-not-necessairly-anacachetupletask_1","title":"Histograms Production (AFTER AnaTupleTask but NOT NECESSAIRLY AnaCacheTupleTask)","text":"<pre><code>era=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; law run HistProducerFileTask --period Run2_${era} --version ${dir} --workflow htcondor --transfer-logs\nera=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; law run HistProducerSampleTask --period Run2_${era} --version ${dir} --workflow htcondor --transfer-logs\nera=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; law run  MergeTask --period Run2_${era}  --version ${dir}  --workflow htcondor --transfer-logs\n</code></pre> <p>Work in progress <pre><code>era=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; law run  HistRebinnerTask --period Run2_${era}  --version ${dir}  --workflow htcondor --transfer-logs #This does something only for KinFit_m, currently\nera=Run2_2016; dir=v8_deepTau2p5_onlyTauTau_HTT; law run  HaddMergedTask --period Run2_${era}  --version ${dir}  --workflow htcondor --transfer-logs\n</code></pre></p>"},{"location":"hh_bbtautau/#tips","title":"Tips","text":"<ol> <li>For local production switch from <code>--workflow htcondor</code> to <code>--workflow local</code></li> <li>To produce specific branches add <code>--branches X1,X2,...</code>, where <code>Xi</code> are the branch numbers</li> </ol>"},{"location":"hh_bbtautau/#how-to-run-hhbtag-training-skim-ntuple-production","title":"How to run HHbtag training skim ntuple production","text":"<pre><code>python Studies/HHBTag/CreateTrainingSkim.py --inFile $CENTRAL_STORAGE/prod_v1/nanoAOD/2018/GluGluToBulkGravitonToHHTo2B2Tau_M-350.root --outFile output/skim.root --mass 350 --sample GluGluToBulkGraviton --year 2018 &gt;&amp; EventInfo.txt\npython Common/SaveHisto.txt --inFile $CENTRAL_STORAGE/prod_v1/nanoAOD/2018/GluGluToBulkGravitonToHHTo2B2Tau_M-350.root --outFile output/skim.root\n</code></pre>"},{"location":"stat_inference/","title":"Statistical inference","text":""},{"location":"stat_inference/#how-to-run-limits","title":"How to run limits","text":"<ol> <li> <p>As a temporary workaround, if you want to run multiplie commands, to avoid delays to load environment each time run:   <pre><code>cmbEnv /bin/zsh # or /bin/bash\n</code></pre>   Alternatively add <code>cmbEnv</code> in front of each command. E.g.   <pre><code>cmbEnv python3 -c 'print(\"hello\")'\n</code></pre></p> </li> <li> <p>Create datacards.   <pre><code>python3 StatInference/dc_make/create_datacards.py --input PATH_TO_SHAPES  --output PATH_TO_CARDS --config PATH_TO_CONFIG\n</code></pre>   Available configurations:</p> <ul> <li>For X-&gt;HH&gt;bbtautau Run 2: StatInference/config/x_hh_bbtautau_run2.yaml</li> <li>For X-&gt;HH-&gt;bbWW Run 3: StatInference/config/x_hh_bbww_run3.yaml</li> </ul> </li> <li> <p>Run limits.   <pre><code>law run PlotResonantLimits --version dev --datacards 'PATH_TO_CARDS/*.txt' --xsec fb --y-log\n</code></pre>   Hints:</p> <ul> <li>use <code>--workflow htcondor</code> to submit on HTCondor (by default it runs locally)</li> <li>add <code>--remove-output 4,a,y</code> to remove previous output files</li> <li>add <code>--print-status 0</code> to get status of the workflow (where <code>0</code> is a depth). Useful to get the output file name.</li> <li>for more details see cms-hh inference documentation</li> </ul> </li> </ol>"}]}